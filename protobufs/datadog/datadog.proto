syntax = "proto3";

package datadog;

message Board {
  string title = 1;

  repeated Widget widgets = 2;

  string layout_type = 3;

  string id = 4;

  string description = 5;

  bool is_read_only = 6;

  repeated string notify_list = 7;

  repeated TemplateVariable template_variables = 8;

  string author_handle = 9;

  string url = 10;

  string created_at = 11;

  string modified_at = 12;
}

message Widget {
  WidgetDefinition definition = 1;

  string id = 2;
}

message WidgetDefinition {
  oneof definition {
    AlertGraph alert_graph = 1;
    AlertValue alert_value = 2;
    Change change = 3;
    CheckStatus check_status = 4;
    Distribution distribution = 5;
    EventStream event_stream = 6;
    EventTimeline event_timeline = 7;
    FreeText free_text = 8;
    Group group = 9;
    HeatMap heat_map = 10;
    Hostmap hostmap = 11;
    Iframe iframe = 12;
    Image image = 13;
    LogStream log_stream = 14;
    MonitorSummary monitor_summary = 15;
    Note note = 16;
    QueryValue query_value = 17;
    ScatterPlot scatter_plot = 18;
    ServiceMap service_map = 19;
    ServiceSummary service_summary = 20;
    Timeseries timeseries = 21;
    TopList top_list = 22;
    Table table = 23;
  }
}

message AlertGraph {
  string type = 1;

  string title = 2;

  string alert_id = 3;

  VizType viz_type = 4;

  enum VizType {
    UNKNOWN = 0;
    TIMESERIES = 1;
    TOPLIST = 2;
  }
}

message AlertValue {
  string type = 1;

  string title = 2;

  string alert_id = 3;

  int32 precision = 4;

  string unit = 5;

  string text_size = 6;

  TextAlign text_align = 7;

  enum TextAlign {
    UNKNOWN = 0;
    LEFT = 1;
    CENTER = 2;
    RIGHT = 3;
  }
}

message Change {
  string type = 1;

  string title = 2;

  repeated Request requests = 3;

  message Request {
    ChangeType change_type = 1;

    enum ChangeType {
      CHANGE_TYPE_UNKNOWN = 0;
      ABSOLUTE = 1;
      RELATIVE = 2;
    }

    CompareTo compare_to = 2;

    enum CompareTo {
      COMPARE_TO_UNKNOWN = 0;
      HOUR_BEFORE = 1;
      DAY_BEFORE = 2;
      WEEK_BEFORE = 3;
      MONTH_BEFORE = 4;
    }

    bool increase_good = 3;

    OrderBy order_by = 4;

    enum OrderBy {
      ORDER_BY_UNKNOWN = 0;
      CHANGE = 1;
      NAME = 2;
      PRESENT = 3;
      PAST = 4;
    }

    OrderDIR order_dir = 5;

    enum OrderDIR {
      ORDER_DIR_UNKNOWN = 0;
      ASC = 1;
      DESC = 2;
    }

    bool show_present = 6;

    oneof query {
      string q = 1001;
      string apm_query = 1002;
      string log_query = 1003;
      string process_query = 1004;
    }
  }
}

message CheckStatus {
  string type = 1;

  string title = 2;
}

message Distribution {
  string type = 1;

  string title = 2;
}

message EventStream {
  string type = 1;

  string title = 2;
}

message EventTimeline {
  string type = 1;

  string title = 2;
}

message FreeText {
  string type = 1;

  string title = 2;
}

message Group {
  string type = 1;

  string title = 2;
}

message HeatMap {
  string type = 1;

  string title = 2;
}

message Hostmap {
  string type = 1;

  string title = 2;
}

message Iframe {
  string type = 1;

  string title = 2;
}

message Image {
  string type = 1;

  string title = 2;
}

message LogStream {
  string type = 1;

  string title = 2;
}

message MonitorSummary {
  string type = 1;

  string title = 2;
}

message Note {
  string type = 1;

  string title = 2;
}

message QueryValue {
  string type = 1;

  string title = 2;
}

message ScatterPlot {
  string type = 1;

  string title = 2;
}

message ServiceMap {
  string type = 1;

  string title = 2;
}

message ServiceSummary {
  string type = 1;

  string title = 2;
}

message Table {
  string type = 1;

  string title = 2;
}

message Timeseries {
  string type = 1;

  string title = 2;

  repeated Request requests = 3;

  message Request {
    repeated WidgetConditionalFormat conditional_formats = 1;

    string style = 2;

    oneof query {
      string q = 1001;
      string apm_query = 1002;
      string log_query = 1003;
      string process_query = 1004;
    }
  }
}

message TopList {

}

message WidgetConditionalFormat {

}

message TemplateVariable {
  string name = 1;

  string default = 2;

  string prefix = 3;
}
